"use client";
import { useEffect, useState } from "react";
import type { Metadata } from "next";
import localFont from "next/font/local";
import "./globals.css";
import ResponsiveAppBar from './components/header';
import Footer from './components/footer';
import Loader from './components/loader';


const geistSans = localFont({
  src: "./fonts/GeistVF.woff",
  variable: "--font-geist-sans",
  weight: "100 900",
});
const geistMono = localFont({
  src: "./fonts/GeistMonoVF.woff",
  variable: "--font-geist-mono",
  weight: "100 900",
});

// export const metadata: Metadata = {
//   title: "Create Next App",
//   description: "Generated by create next app",
// };

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {

  const [isLoading, setIsLoading] = useState(true);

  useEffect(() => {
    // Simulate a loading delay
    const timer = setTimeout(() => {
      setIsLoading(false);
    }, 2000); // Adjust the delay as needed (e.g., 2 seconds)

    return () => clearTimeout(timer);
  }, []);


  return (
    <html lang="en">
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
         {isLoading ? (
          <Loader /> // Show loader while loading
        ) : (
          <>
            <ResponsiveAppBar />
            {children}
            <Footer />
          </>
        )}
      </body>
    </html>
  );
}
